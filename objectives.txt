Build a simple website app for a virtual tabletop game using FastHTML

Completed:
1. Set up the project structure
2. Created the main application file (main.py)
3. Implemented the home page
4. Created a basic game room view with:
   - ASCII representation of the battlemap
   - Player movement functionality
   - Action input form
   - Action log

Next steps:
1. Create core.py with Pydantic models for the game state:
   - Implement Tile, Battlemap, and GameState models
   - Add methods for entity movement and position retrieval

2. Implement Anthropic-based world model language model agent:
   - Create a function to generate AI responses using Anthropic's API
   - Design a prompt template for the AI to interpret user actions and update the game state
   - Implement error handling and fallback mechanisms

3. Update main.py to use the new core.py models and AI agent:
   - Replace the current game_state dictionary with the new GameState model
   - Modify the render_map function to work with the new Battlemap model
   - Update the move_player function to use the AI agent for interpreting actions and updating the game state

4. Enhance the user interface:
   - Display both the current and previous battlemaps side by side
   - Improve the action log to show AI-generated descriptions of the results
   - Add a legend explaining the symbols used in the battlemap

5. Implement additional game features:
   - Add more entity types (e.g., NPCs, items)
   - Implement basic interaction mechanics (e.g., picking up items, talking to NPCs)
   - Create a simple inventory system

6. Improve error handling and user feedback:
   - Provide more detailed error messages for invalid actions
   - Add visual cues for successful/unsuccessful actions

7. Optimize performance:
   - Implement caching for AI responses if necessary
   - Optimize the battlemap rendering for larger maps

8. Add user authentication and multiple game rooms (as per original plan)

9. Implement WebSocket functionality for real-time updates (as per original plan)

10. Prepare for deployment and documentation (as per original plan)
